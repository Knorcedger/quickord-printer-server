name: Create release Windows

on:
  push:
    branches:
      - spike-actions

permissions:
  contents: write

jobs:
  create:
    runs-on: windows-latest
    # timeout-minutes: 30
    steps:
      # Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.11.0

      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      # Cache Node modules
      - name: Cache Node modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      # Install Node dependencies if cache missed
      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Nexe globally
        run: npm install -g nexe
      - name: Install MSVC and SDK
        uses: microsoft/setup-msbuild@v1.1
      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.27.0'

      # Run deploy.sh with MSVC initialized
      - name: Run deploy.sh with MSVC
        shell: cmd
        run: |
          nasm --version
          FOR /F "usebackq tokens=*" %%i IN (`"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath`) DO SET VS_PATH=%%i
          call "%VS_PATH%\VC\Auxiliary\Build\vcvarsall.bat" x64
          bash ./deploy.sh
